{"version":3,"sources":["components/Field.tsx","index.tsx"],"names":["Field","sdk","useState","ingredient","setIngredient","entry","fields","amount","getValue","setAmount","measurement","setMeasurement","useEffect","window","startAutoResizer","stopAutoResizer","detachIngredientChange","onValueChanged","space","getEntry","sys","id","then","name","detachAmountChange","detachMeasurementChange","title","field","setValue","init","root","document","getElementById","render"],"mappings":"iOAsEeA,EA9DD,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,IAAsB,EACDC,mBAAS,IADR,mBAC9BC,EAD8B,KAClBC,EADkB,OAETF,mBAASD,EAAII,MAAMC,OAAOC,OAAOC,YAFxB,mBAE9BD,EAF8B,KAEtBE,EAFsB,OAGCP,mBAAS,IAHV,mBAG9BQ,EAH8B,KAGjBC,EAHiB,KA2CrC,GAtCAC,qBAAU,WAGR,OAFAX,EAAIY,OAAOC,mBAEJ,WACLb,EAAIY,OAAOE,qBAEZ,CAACd,EAAIY,SAERD,qBAAU,WACR,IAAMI,EAAyBf,EAAII,MAAMC,OAAOH,WAAWc,gBAAe,SAAAd,GACpEA,GACFF,EAAIiB,MAAMC,SAAShB,EAAWiB,IAAIC,IAAIC,MAAK,SAACnB,GAC1CC,EAAcD,EAAWG,OAAOiB,KAAK,gBAKrCC,EAAqBvB,EAAII,MAAMC,OAAOC,OAAOU,gBAAe,SAAAV,GAChEE,EAAUF,MAGNkB,EAA0BxB,EAAII,MAAMC,OAAOI,YAAYO,gBAAe,SAAAP,GACtEA,EACFT,EAAIiB,MAAMC,SAAST,EAAYU,IAAIC,IAAIC,MAAK,SAACZ,GAC3CC,EAAeD,EAAYJ,OAAOiB,KAAK,aAGzCZ,EAAe,OAInB,OAAO,WACLK,IACAQ,IACAC,OAED,CAACxB,EAAIiB,MAAOjB,EAAII,MAAMC,OAAOH,WAAYF,EAAII,MAAMC,OAAOC,OAAQN,EAAII,MAAMC,OAAOI,eAEjFP,EACH,OAAO,cAAC,IAAD,IAGT,IAAIuB,EAAQvB,EAYZ,OAVII,IACFmB,GAAK,WAAQnB,IAGXG,IACFgB,GAAK,WAAQhB,IAGfT,EAAI0B,MAAMC,SAASF,GAEZ,cAAC,IAAD,UAAYA,KCrDrBG,gBAAK,SAAC5B,GACJ,IAAM6B,EAAOC,SAASC,eAAe,QAErCC,iBAAO,cAAC,EAAD,CAAOhC,IAAKA,IAA8B6B,Q","file":"static/js/main.de3332ab.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Paragraph, Spinner } from '@contentful/forma-36-react-components';\nimport { FieldExtensionSDK } from '@contentful/app-sdk';\n\ninterface FieldProps {\n  sdk: FieldExtensionSDK;\n}\n\nconst Field = ({ sdk }: FieldProps) => {\n  const [ingredient, setIngredient] = useState('')\n  const [amount, setAmount] = useState(sdk.entry.fields.amount.getValue())\n  const [measurement, setMeasurement] = useState('')\n\n  useEffect(() => {\n    sdk.window.startAutoResizer()\n\n    return () => {\n      sdk.window.stopAutoResizer()\n    }\n  }, [sdk.window])\n\n  useEffect(() => {\n    const detachIngredientChange = sdk.entry.fields.ingredient.onValueChanged(ingredient => {\n      if (ingredient) {\n        sdk.space.getEntry(ingredient.sys.id).then((ingredient: any) => {\n          setIngredient(ingredient.fields.name['sv-SE'])\n        })\n      }\n    })\n\n    const detachAmountChange = sdk.entry.fields.amount.onValueChanged(amount => {\n      setAmount(amount)\n    })\n\n    const detachMeasurementChange = sdk.entry.fields.measurement.onValueChanged(measurement => {\n      if (measurement) {\n        sdk.space.getEntry(measurement.sys.id).then((measurement: any) => {\n          setMeasurement(measurement.fields.name['sv-SE'])\n        })\n      } else {\n        setMeasurement('')\n      }\n    })\n    \n    return () => {\n      detachIngredientChange()\n      detachAmountChange()\n      detachMeasurementChange()\n    }\n  }, [sdk.space, sdk.entry.fields.ingredient, sdk.entry.fields.amount, sdk.entry.fields.measurement]);\n\n  if (!ingredient) {\n    return <Spinner />\n  }\n\n  let title = ingredient;\n\n  if (amount) {\n    title += ` ${amount}`\n  }\n\n  if (measurement) {\n    title += ` ${measurement}`\n  }\n\n  sdk.field.setValue(title)\n\n  return <Paragraph>{title}</Paragraph>\n};\n\nexport default Field;\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport {\n  FieldExtensionSDK,\n  init,\n} from '@contentful/app-sdk';\nimport '@contentful/forma-36-react-components/dist/styles.css';\nimport '@contentful/forma-36-fcss/dist/styles.css';\nimport '@contentful/forma-36-tokens/dist/css/index.css';\nimport './index.css';\n\nimport Field from './components/Field';\n\ninit((sdk) => {\n  const root = document.getElementById('root');\n\n  render(<Field sdk={sdk as FieldExtensionSDK} />, root);\n});\n"],"sourceRoot":""}